# Copyright (C) 2021, RTE (http://www.rte-france.com)
# SPDX-License-Identifier: Apache-2.0
# Deploy 4 VMs on the CI

---
- name: Prepare the CI
  hosts: localhost
  tasks:
    - name: Build the DHCP server docker image
      docker_image:
        name: "ci_dhcp_vm"
        tag: "1.0"
        state: present
        source: build
        build:
          path: "{{ ci_docker_compose_path }}/dhcp_vm"
          pull: true
          args:
            DHCP_RANGE_BEGIN: "{{ dhcp_vm_range_begin }}"
            DHCP_RANGE_END: "{{ dhcp_vm_range_end }}"
            DHCP_BIND_INTERFACE: "{{ dhcp_vm_bind_interface }}"
    - name: Start the DHCP server
      docker_container:
        recreate: true
        network_mode: host
        auto_remove: true
        state: "started"
        image: "ci_dhcp_vm:1.0"
        name: "ci_dhcp_vm"
        capabilities:
          - "net_admin"


- name: create 4 VMs
  hosts: "{{ groups.hypervisors[0] }}"
  vars:
    - xml_template: >-
        {{ vm_config | default('../templates/vm/votp_vm_dpdk.xml.j2') }}
    - disk_path: >-
        {{ image_directory }}/{{ guest_image |
        default('seapath-guest-efi-image-votp.wic.qcow2') }}
  tasks:
    - name: copy the disk on target
      copy:
        src: "{{ disk_path }}"
        dest: /tmp/os.qcow2
    - name: "Create a template VM"
      cluster_vm:
        name: template
        command: create
        system_image: /tmp/os.qcow2
        force: true
        enable: false
        xml: >-
          {{ lookup('template', xml_template,
          template_vars=dict(
            title='guest0',
            ovs_br='ovsbr0',
            ovs_port=0,
            mac_address='52:54:00:ab:39:8f', ),
          errors='strict') }}
    - name: Remove temporary file
      file:
        path: /tmp/os.qcow2
        state: absent
    - name: "Clone template on guest0"
      cluster_vm:
        name: guest0
        command: clone
        src_name: template
        force: true

    - name: "Clone template on guest1"
      cluster_vm:
        name: guest1
        command: clone
        src_name: template
        force: true
        xml: >-
          {{ lookup('template', xml_template,
          template_vars=dict(
            title='guest1',
            ovs_br='ovsbr0',
            ovs_port=1,
            mac_address='52:54:00:66:d3:c4', ),
          errors='strict') }}
    - name: "Clone template on guest2"
      cluster_vm:
        name: guest2
        command: clone
        src_name: template
        force: true
        xml: >-
          {{ lookup('template', xml_template,
          template_vars=dict(
            title='guest2',
            ovs_br='ovsbr0',
            ovs_port=2,
            mac_address='52:54:00:dd:78:91', ),
          errors='strict') }}
    - name: "Clone template on guest3"
      cluster_vm:
        name: guest3
        command: clone
        src_name: template
        force: true
        enable: false
        xml: >-
          {{ lookup('template', xml_template,
          template_vars=dict(
            title='guest3',
            ovs_br='ovsbr0',
            ovs_port=2,
            mac_address='52:54:00:54:4d:e6', ),
          errors='strict') }}
    - name: "Enable guest3"
      cluster_vm:
          name: guest3
          command: enable
